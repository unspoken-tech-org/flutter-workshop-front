name: Build & Release Windows (Inno + GitHub Releases)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Flutter pub get
        run: flutter pub get

      - name: Build Flutter Windows (release)
        run: flutter build windows --release

      # Instala Inno Setup no runner
      - name: Install Inno Setup (choco)
        shell: pwsh
        run: |
          choco install innosetup -y
          $env:PATH += ";C:\Program Files (x86)\Inno Setup 6"

      # Extrai versão do pubspec e compila o instalador
      - name: Compile installer (Inno Setup)
        shell: pwsh
        run: |
          $pub = Get-Content -Raw pubspec.yaml
          $m = [regex]::Match($pub, "version:\s*([0-9]+)\.([0-9]+)\.([0-9]+)")
          if (-not $m.Success) { throw "Não encontrei 'version:' no pubspec.yaml" }
          $ver = "$($m.Groups[1].Value).$($m.Groups[2].Value).$($m.Groups[3].Value)"
          echo "APP_VER=$ver" | Out-File -FilePath $env:GITHUB_ENV -Append

          # Passa APP_VER como variável de ambiente para o .iss
          $env:APP_VER = $ver
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer\WorkshopApp.iss

          if (-not (Test-Path "dist\WorkshopApp-setup.exe")) {
            throw "Instalador não gerado em dist\WorkshopApp-setup.exe"
          }

      # Prepara artefatos: renomeia EXE com versão, calcula length, gera appcast/notes
      - name: Prepare appcast and notes
        id: prep
        shell: pwsh
        run: |
          $ver = "$env:APP_VER"
          if ([string]::IsNullOrWhiteSpace($ver)) { throw "APP_VER vazio" }

          New-Item -ItemType Directory -Force -Path build\release | Out-Null

          $src = "dist\WorkshopApp-setup.exe"
          $dst = "build\release\WorkshopApp-$ver-setup.exe"
          Copy-Item $src $dst -Force

          $len = (Get-Item $dst).Length
          echo "FILE_LEN=$len" | Out-File -FilePath $env:GITHUB_ENV -Append

          $org  = "unspoken-tech-org"
          $repo = "flutter-workshop-front"

          $tpl = Get-Content -Raw appcast_template.xml
          $appcast = $tpl.Replace("__ORG__", $org).Replace("__REPO__", $repo).Replace("__VER__", $ver).Replace("__LEN__", "$len")
          $appcast | Set-Content -Path build\release\appcast.xml -Encoding UTF8

          @"
          <h2>Workshop App $ver</h2>
          <ul>
            <li>Correções e melhorias.</li>
          </ul>
          "@ | Set-Content -Path build\release\notes-$ver.html -Encoding UTF8

      # Publica Release usando a VERSÃO do pubspec como tag_name
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.APP_VER }}        # <= tag será exatamente a versão do pubspec
          name: "Windows ${{ env.APP_VER }}"
          draft: false
          prerelease: false
          files: |
            build/release/WorkshopApp-${{ env.APP_VER }}-setup.exe
            build/release/appcast.xml
            build/release/notes-${{ env.APP_VER }}.html
